实战CGLib系列文章
本篇介绍延迟加载器LazyLoader。
一、作用：
说到延迟加载，应该经常接触到，尤其是使用Hibernate的时候，本篇将通过一个实例分析延迟加载的实现方式。
LazyLoader接口继承了Callback，因此也算是CGLib中的一种Callback类型。

二、示例：
1.一个Bean（LoaderBean）内需要有延迟加载的属性PropertyBean，
2.LoaderBean的构造函数中，对需要延迟加载的属性PropertyBean由代理类生成，
    (PropertyBean)Enhancer.create(PropertyBean.class,new ConcreteClassLazyLoader());
3.实现延迟加载LazyLoader回调接口的类，对需要延迟加载的Bean进行初始化并返回
当访问延迟加载属性PropertyBean的getter方法，就会自动触发代理类回调

延迟加载原理：

对需要延迟加载的对象添加代理，在获取该对象属性时先通过代理类回调方法进行对象初始化。

在不需要加载该对象时，只要不去获取该对象内属性，该对象就不会被初始化了（在CGLib的实现中只要去访问该对象内属性的getter方法，就会自动触发代理类回调）。